import telebot
import requests

# === –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω—ñ–≤ ===

from dotenv import load_dotenv
import os

load_dotenv()


TELEGRAM_BOT_TOKEN : str | None = os.getenv("7169216593:AAGs2IEF8JDIM_hD5IiFxya_uYt0DCgMZBg")
WEATHER_API_KEY : str | None = os.getenv("bcb4db6a69767d454faa976a3c974d23")

bot = telebot.TeleBot(TELEGRAM_BOT_TOKEN)

# === –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏ ===
def fetch_weather(city):
    print(f"[LOG] –ó–∞–ø–∏—Ç –ø–æ–≥–æ–¥–∏ –¥–ª—è –º—ñ—Å—Ç–∞: {city}")  # –ª–æ–≥—É–≤–∞–Ω–Ω—è

    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric&lang=ua"
    response = requests.get(url)

    if response.status_code == 200:
        data = response.json()
        try:
            temp = data['main']['temp']
            desc = data['weather'][0]['description']
            humidity = data['main']['humidity']
            wind = data['wind']['speed']

            return (f"–ü–æ–≥–æ–¥–∞ –≤ {city.capitalize()}:\n"
                    f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n"
                    f"‚òÅ –û–ø–∏—Å: {desc.capitalize()}\n"
                    f"üíß –í–æ–ª–æ–≥—ñ—Å—Ç—å: {humidity}%\n"
                    f"üí® –í—ñ—Ç–µ—Ä: {wind} –º/—Å")
        except KeyError:
            return "–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –¥–∞–Ω–∏—Ö –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞."
    elif response.status_code == 404:
        return f"–ú—ñ—Å—Ç–æ '{city}' –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –Ω–∞–∑–≤—É."
    else:
        return "–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ API."

# === /start ===
@bot.message_handler(commands=['start'])
def start_command(message):
    bot.reply_to(message,
                 "–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏.\n"
                 "–ü—Ä–∏–≤—ñ—Ç! –ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /weather <–º—ñ—Å—Ç–æ>, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –ø–æ–≥–æ–¥—É.")

# === /help ===
@bot.message_handler(commands=['help'])
def help_command(message):
    bot.reply_to(message,
                 "–ö–æ–º–∞–Ω–¥–∏:\n"
                 "/start ‚Äì –ü—Ä–∏–≤—ñ—Ç–∞–Ω–Ω—è\n"
                 "/help ‚Äì –î–æ–ø–æ–º–æ–≥–∞\n"
                 "/weather <–º—ñ—Å—Ç–æ> ‚Äì –ü–æ–≥–æ–¥–∞ —É –≤–∫–∞–∑–∞–Ω–æ–º—É –º—ñ—Å—Ç—ñ\n")

# === /weather ===
@bot.message_handler(commands=['weather'])
def weather_command(message):
    try:
        city = message.text.split(maxsplit=1)[1]
    except IndexError:
        bot.reply_to(message, "–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂–∏ –º—ñ—Å—Ç–æ. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: /weather –ö–∏—ó–≤")
        return

    weather_info = fetch_weather(city)
    bot.reply_to(message, weather_info)

# === –í—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ –∑–≤–∏—á–∞–π–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è (–º—ñ—Å—Ç–æ) ===
@bot.message_handler(func=lambda message: True)
def handle_city(message):
    city = message.text.strip()

bot.infinity_polling()